{
  "permissions": {
    "allow": [
      "WebFetch",
      "WebSearch",
      "Glob",
      "Grep",
      "LS",
      "Read",
      "Bash(make:*)",
      "Bash(just:*)",
      "Bash(go:*)",
      "Bash(cargo:*)",
      "Bash(forge:*)",
      "Bash(bun:*)",
      "Bash(pg_isready:*)",
      "Bash(mkdir:*)",
      "Bash(cp:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(ls:*)",
      "Bash(sed:*)",
      "Bash(xargs:*)",
      "Bash(head:*)",
      "Bash(tail:*)",
      "Bash(diff:*)",
      "Bash(git fetch:*)",
      "Bash(git checkout:*)",
      "Bash(gh repo view:*)",
      "Bash(gh issue view:*)",
      "Bash(gh pr view:*)",
      "Bash(gh pr diff:*)",
      "mcp__linear__get_issue",
      "mcp__linear__get_project",
      "mcp__linear__list_issues",
      "mcp__notion__fetch"
    ],
    "deny": [
      "Read(node_modules/**)"
    ]
  },
  "model": "opusplan",
  "enableAllProjectMcpServers": true,
  "enabledMcpjsonServers": [
    "Context7",
    "perplexity-ask",
    "linear"
  ],
  "hooks": {
    "Notification": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "afplay /System/Library/Sounds/Ping.aiff"
          }
        ]
      }
    ],
    "Stop": [
      {
        "matcher": "",
        "hooks": [
          {
            "type": "command",
            "command": "afplay /System/Library/Sounds/Glass.aiff"
          }
        ]
      }
    ]
  },
  "statusLine": {
    "type": "command",
    "command": "input=$(cat); printf \"$(whoami)@$(hostname -s):$(basename \"$(pwd)\") [$(echo \"$input\" | jq -r '.model.display_name')] $(git branch --show-current 2>/dev/null | sed 's/^/git:/' || echo 'no-git')\""
  }
}